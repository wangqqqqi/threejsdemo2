const fs = require('fs');
const create = require('../src/compressor/create');
const converters = require('../src/compressor/converters');

const bufferToArrayBufferCycle = buffer => {
    var ab = new ArrayBuffer(buffer.length);
    var view = new Uint8Array(ab);
    for (var i = 0; i < buffer.length; ++i) {
        view[i] = buffer[i];
    }
    return ab;
};

const opentype = require('opentype.js');


const get = (object) => {
    const obj = {};

    for (const i in font) {
        if (typeof font[i] !== 'object') {
            obj[i] = font[i];
        }
    }

    return obj;
}

const font = opentype.parse(bufferToArrayBufferCycle(fs.readFileSync(__dirname + '/font-awesome/fonts/fontawesome webfont.otf')));

const font2 = opentype.parse(bufferToArrayBufferCycle(fs.readFileSync(__dirname + '/font-awesome/fonts/e-fontawesome webfont.otf')));

const serialization = require('./serialization');

// for (const i in font) {
//     JSON.stringify(font[i])
// }



fs.writeFileSync(__dirname + '/a.json', JSON.stringify(font.encoding, null, 2), 'utf8');
fs.writeFileSync(__dirname + '/b.json', JSON.stringify(font2.encoding, null, 2), 'utf8');

console.log('ok')